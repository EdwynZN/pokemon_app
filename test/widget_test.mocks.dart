// Mocks generated by Mockito 5.4.2 from annotations
// in pokemon_go/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pokemon_go/domain/failure.dart' as _i5;
import 'package:pokemon_go/domain/pokemon/model/pokemon.dart' as _i7;
import 'package:pokemon_go/domain/pokemon/model/pokemon_shallow.dart' as _i6;
import 'package:pokemon_go/domain/pokemon/repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRepository extends _i1.Mock implements _i3.PokemonRepository {
  MockPokemonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.DomainFailure, List<_i6.PokemonShallow>>> getPage({
    int? offset = 0,
    int? limit = 60,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPage,
          [],
          {
            #offset: offset,
            #limit: limit,
          },
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.DomainFailure, List<_i6.PokemonShallow>>>.value(
            _FakeEither_0<_i5.DomainFailure, List<_i6.PokemonShallow>>(
          this,
          Invocation.method(
            #getPage,
            [],
            {
              #offset: offset,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.DomainFailure, List<_i6.PokemonShallow>>>);

  @override
  _i4.Future<_i2.Either<_i5.DomainFailure, _i7.Pokemon>> getDetail(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [],
          {#id: id},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.DomainFailure, _i7.Pokemon>>.value(
                _FakeEither_0<_i5.DomainFailure, _i7.Pokemon>(
          this,
          Invocation.method(
            #getDetail,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.DomainFailure, _i7.Pokemon>>);
}
